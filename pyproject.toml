[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "JARVIS"
version = "0.1.0"
description = "A desktop assistant combining voice transcription, AI-powered command processing, and a modern PyQt5-based UI"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = [
    "openai",
    "whisper",
    "voice-transcription",
    "desktop-assistant",
    "pyqt5",
    "ai",
    "gpt",
]
authors = [
    { name = "Parker Jackim", email = "parkerwjackim@gamil.com" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: X11 Applications :: Qt",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Desktop Environment",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Speech",
]

dependencies = [
    "numpy>=1.24.4",
    "openai>=1.59.4",
    "openai-whisper>=20240930",
    "pyperclip>=1.9.0",
    "python-dotenv>=1.0.1",
    "soundfile>=0.13.0",
    "pyqt5>=5.15.11",
    "pyqt5-qt5==5.15.2",
    "keyboard>=0.13.5",
    "sounddevice>=0.5.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-qt>=4.2.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.5.1",
    "types-python-dotenv>=1.0.0",
    "types-pyperclip>=1.9.0",
]

docs = [
    "sphinx>=7.1.2",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/jarvis-desktop-assistant"
Documentation = "https://jarvis-desktop-assistant.readthedocs.io/"
Repository = "https://github.com/yourusername/jarvis-desktop-assistant.git"
Issues = "https://github.com/yourusername/jarvis-desktop-assistant/issues"

[tool.hatch.build.targets.wheel]
packages = ["ai", "commands", "config", "services", "ui"]

[tool.black]
line-length = 100
target-version = ["py310"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
addopts = "-ra -q --cov=. --cov-report=term-missing"
testpaths = ["tests"]
qt_api = "pyqt5"

[project.scripts]
jarvis = "main:main"
