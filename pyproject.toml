[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "JARVIS"
version = "1.0.0"
description = "A desktop assistant combining voice transcription, AI-powered command processing, and a modern PyQt5-based UI"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = [
    "openai",
    "whisper",
    "voice-transcription",
    "desktop-assistant",
    "pyqt5",
    "ai",
    "gpt",
]
authors = [
    { name = "m0rt", email = "mort@paradox.zone" }
]
dependencies = [
    "file>=0.3.0",
    "keyboard>=0.13.5",
    "openai>=1.69.0",
    "openai-whisper>=20240930",
    "pyperclip>=1.9.0",
    "python-dotenv>=1.1.0",
    "rich>=13.9.4",
    "sound>=0.1.0",
    "sounddevice>=0.5.1",
    # Windows Packages
    "pyqt5>=5.15.11; platform_system=='Windows'",

    # Linux Packages
    # "pyqt5>=?.?.?; platform_system=='Linux'",

    # MacOS Packages
    # "pyqt5>=?.?.?; platform_system=='Darwin'",
]




[tool.hatch.build.targets.wheel]
packages = ["ai", "commands", "config", "services", "ui"]

[tool.black]
line-length = 100
target-version = ["py310"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
addopts = "-ra -q --cov=. --cov-report=term-missing"
testpaths = ["tests"]
qt_api = "pyqt5"

[project.scripts]
jarvis = "main:main"
