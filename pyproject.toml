[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "JARVIS"
version = "1.0.0"
description = "Your AI assistant for automating tasks and enhancing productivity."
readme = "README.md"
requires-python = ">=3.12"
license = { file = "LICENSE" }
authors = [{ name = "mort-sh" }]
keywords = ["git", "commit", "ai", "openai", "automation"]
dependencies = [
    "openai>=1.70.0",
    "prompt-toolkit>=3.0.50",
    "requests>=2.32.3",
    "sounddevice>=0.5.1",
    "soundfile>=0.13.1",
    "vosk>=0.3.45",
    "wave>=0.0.2",
    "torch>=2.6.0",
    "torchvision>=0.21.0",
    "torchaudio>=2.6.0",
    "pyperclip>=1.9.0",
    "keyboard>=0.13.5",
    "rich>=14.0.0",
    "pyqt6>=6.8.1",
    "pydantic-ai>=0.0.52",
    "whisperx>=3.3.1",
    "pyannote-audio>=3.3.2",
]

[project.urls]
"Homepage" = "https://github.com/mort-sh/AutomaticGitCommit"
"Bug Tracker" = "https://github.com/mort-sh/AutomaticGitCommit/issues"

[project.scripts]
project_build = "scripts.build:main"
project_clean = "scripts.clean:main"
project_release = "scripts.release:main"
package_build = "scripts.build:main"
package_clean = "scripts.clean:main"
package_release = "scripts.release:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"

[tool.coverage.run]
source = ["jarvis"]

[tool.ruff]
target-version = "py312"
exclude = [
    ".bzr", ".direnv", ".eggs", ".git", ".git-rewrite", ".hg", ".ipynb_checkpoints",
    ".mypy_cache", ".nox", ".pants.d", ".pyenv", ".pytest_cache", ".pytype", ".ruff_cache",
    ".svn", ".tox", ".venv", "__pypackages__", "_build", "buck-out", "build", "dist",
    "node_modules", "venv", "*/migrations/*",
]
line-length = 100

[tool.ruff.lint]
select = [
    "E", "W", "F", "I", "C90", "N", "UP", "B", "A", "SIM", "T20", "PYI", "PL", "RUF",
]
ignore = [
    "PLR0913", "PLR0915", "PLR2004", "PLW2901", "T201",
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.mccabe]
max-complexity = 12

[tool.ruff.lint.isort]
known-first-party = ["jarvis"]
force-sort-within-sections = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
preview = true

[tool.hatch.build.targets.wheel]
packages = ["jarvis"]

# UV configuration for custom dependency resolution and indexes
[tool.uv]
index-strategy = "first-index"  # Allowed values: first-index, unsafe-any-match, unsafe-first-match, unsafe-best-match

# Map PyTorch packages to our CUDA-enabled PyTorch index
[tool.uv.sources]
torch = { index = "pytorch" }
torchvision = { index = "pytorch" }
torchaudio = { index = "pytorch" }

# Define indexes: our explicit PyTorch index for CUDA support and the default PyPI index
[[tool.uv.index]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cu126"
explicit = true

[[tool.uv.index]]
name = "pypi"
url = "https://pypi.org/simple"
